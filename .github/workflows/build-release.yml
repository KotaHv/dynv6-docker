name: Build Releases
on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  build-cross:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
      CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - armv7-unknown-linux-musleabihf
          - aarch64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: nightly
          default: true
          override: true
      - name: Install cross
        run: cargo install cross
      - name: Build ${{ matrix.target }}
        timeout-minutes: 120
        run: |
          cross build --release --no-default-features --features rustls --target ${{ matrix.target }} &&
          mv target/${{ matrix.target }}/release/dynv6 target/${{ matrix.target }}/release/dynv6-${{ matrix.target }}
      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: target/${{ matrix.target }}/release/dynv6-${{ matrix.target }}
          prerelease: ${{ contains(github.ref, '-') }}

  build-cross-mips:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
      CARGO_TARGET_MIPS_UNKNOWN_LINUX_MUSL_LINKER: mips-unknown-linux-musl-gcc
      CARGO_TARGET_MIPSEL_UNKNOWN_LINUX_MUSL_LINKER: mipsel-unknown-linux-musl-gcc
    strategy:
      matrix:
        target:
          - mips-unknown-linux-musl
          - mipsel-unknown-linux-musl
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: nightly
          default: true
          override: true
      - name: Install cross
        run: cargo install cross
      - name: Install upx
        run: |
          sudo apt-get update -y && sudo apt-get install -y curl &&
          curl -OL https://github.com/upx/upx/releases/download/v4.0.2/upx-4.0.2-amd64_linux.tar.xz &&
          tar -xf upx-4.0.2-amd64_linux.tar.xz -C /tmp && 
          sudo mv /tmp/upx-4.0.2-amd64_linux/upx /usr/bin
      - name: Build ${{ matrix.target }}
        timeout-minutes: 120
        run: |
          cross build --release --features vendored-openssl --target ${{ matrix.target }} &&
          mv target/${{ matrix.target }}/release/dynv6 target/${{ matrix.target }}/release/dynv6-${{ matrix.target }} && 
          upx --ultra-brute target/${{ matrix.target }}/release/dynv6-${{ matrix.target }}
      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: target/${{ matrix.target }}/release/dynv6-${{ matrix.target }}
          prerelease: ${{ contains(github.ref, '-') }}
  build-unix:
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: full
      CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
    strategy:
      matrix:
        os: [macos-latest]
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: nightly
          default: true
          override: true
      - name: Build release
        shell: bash
        run: |
          cargo build --release --no-default-features --features rustls --target ${{ matrix.target }} &&
          mv target/${{ matrix.target }}/release/dynv6 target/${{ matrix.target }}/release/dynv6-${{ matrix.target }}
      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: target/${{ matrix.target }}/release/dynv6-${{ matrix.target }}
          prerelease: ${{ contains(github.ref, '-') }}
